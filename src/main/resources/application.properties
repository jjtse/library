quarkus.datasource.db-kind=mysql
quarkus.datasource.username=root
quarkus.datasource.password=02379
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/db_library?useSSL=false&allowPublicKeyRetrieval=true
#
#quarkus.redis.hosts=redis://localhost:6379
#quarkus.redis.password=02379

#-Dlog4j.configurationFile=/library/src/main/resources/log4j2.xml

quarkus.http.port=8080
quarkus.log.level=INFO
#quarkus.log.category."org.hibernate".level=INFO
#
## The Kafka broker location (defaults to localhost:9092)
#kafka.bootstrap.servers=192.168.56.1:9092
#
## Configuring the incoming channel (reading from Kafka)
#mp.messaging.incoming.library-in.connector=smallrye-kafka
#mp.messaging.incoming.library-in.topic=library
##mp.messaging.incoming.movies-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
##mp.messaging.incoming.movies-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
##mp.messaging.incoming.movies-in.value.deserializer=com.example.demo.deserializer.MovieDeserializer
#mp.messaging.incoming.library-in.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
##mp.messaging.incoming.library-in.group.id=moviegroup
#
## Configuring the outgoing channel (writing to Kafka)
#mp.messaging.outgoing.library-out.connector=smallrye-kafka
#mp.messaging.outgoing.library-out.topic=library
##mp.messaging.outgoing.movies-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
##mp.messaging.outgoing.movies-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.library-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer

#%prod.kafka.bootstrap.servers=192.168.56.1:9092 
#mp.messaging.incoming.prices.connector=smallrye-kafka 


#mp.messaging.incoming.library-in.topic=library
#mp.messaging.outgoing.library-out.topic=library
#mp.messaging.incoming.library-in.auto.offset.reset=earliest
#
#kafka.bootstrap.servers=192.168.56.1:9092


#log config
#log4j.rootLogger=INFO,console
# 
#
## for package com.demo.kafka, log would be sent to kafka appender.
#log4j.logger.com.demo.kafka=DEBUG,kafka
# 
## appender kafka
#log4j.appender.kafka=kafka.producer.KafkaLog4jAppender
#log4j.appender.kafka.topic=library
#
## multiple brokers are separated by comma ",".
#
#log4j.appender.kafka.brokerList=192.168.56.1:9092
#log4j.appender.kafka.compressionType=none
#
#log4j.appender.kafka.syncSend=true
#log4j.appender.kafka.layout=org.apache.log4j.PatternLayout
#log4j.appender.kafka.layout.ConversionPattern=%d [%-5p] [%t] - [%l] %m%n
#
#  
## appender console
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.target=System.out
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=%d [%-5p] [%t] - [%l] %m%n

#mp.messaging.incoming.library-in.topic=library
mp.messaging.outgoing.library-out.topic=library
#mp.messaging.incoming.library-in.auto.offset.reset=earliest

kafka.bootstrap.servers=192.168.56.1:9092
#kafka-clients.bootstrap.servers=192.168.56:9092
